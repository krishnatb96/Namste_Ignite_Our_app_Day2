Q1) what is NPM?
Ans: NPM is default package manager for javascript's runtime node.js
In general, every npm project has a file called package.json located in the root directory. 
The package.json is a plain text file that contains important information that npm uses to identify the project and handle dependencies.
_____________________________________________________________________________________________________________________________________________

Q2)Whta is parcel/webpack? why do we need it?
Ans: Parcel is a web application bundler, differentiated by its developer experience. 
It offers blazing fast performance utilizing multicore processing, and requires zero configuration.
If we want to start our react appliction then we need the dependencies to run our application so the parcel gives everything which is required to run the application
_____________________________________________________________________________________________________________________________________________

Q3) What is parcel-cache?
Ans:Cache folder store the information about your project when parcel build it. So that when it rebuild, it doesn;t have to re-parse and re-analyze
everything from scratch.its key reason why parcel can be fast in development mode.
_____________________________________________________________________________________________________________________________________________
Q4)what is npx?
Ans:NPX: The npx stands for Node Package Execute and it comes with the npm, when you installed npm above 5.2.0 version then automatically npx will installed. 
It is an npm package runner that can execute any package that you want from the npm registry without even installing that package.
It is useful duringle single time use package
_____________________________________________________________________________________________________________________________________________
Q5)What is difference between `dependencies` vs `devDependencies`
 Ans:When you run npm install, npm will download dependencies and devDependencies that are listed in package.json that meet the semantic version 
 requirements listed for each.
 "dependencies": Packages required by your application in production.
"devDependencies": Packages that are only needed for local development and testing.
_____________________________________________________________________________________________________________________________________________
Q6)What is Tree Shaking?
Ans:Tree shaking is a term commonly used within a JavaScript context to describe the removal of dead code.
In modern JavaScript applications, we use module bundlers (e.g., webpack or Rollup) to automatically remove dead code when bundling multiple JavaScript files into single files. 
This is important for preparing code that is production ready, 
for example with clean structures and minimal file size.
_____________________________________________________________________________________________________________________________________________
Q7)What is Hot Module Replacement?
Ans:Hot Module Replacement is a feature that enables you to see code changes in the browser without having to refresh it,to track the exact
file changes there is File Watcher algorithm wirren in c++.
_____________________________________________________________________________________________________________________________________________
Q8)List down your favourite 5 superpowers of Parcel and describe any 3 of them in your own words?
Ans: i Hot Module Replacement
     ii bundling
     iii minifying
     iv compression
     v image optimization
_____________________________________________________________________________________________________________________________________________
Q9)What is `.gitignore`? What should we add and not add into it?
Ans:The . gitignore file tells Git which files to ignore when committing your project to the GitHub repository. 
gitignore is located in the root directory of your repo. / will ignore directories with the name.
_____________________________________________________________________________________________________________________________________________
Q10)What is the difference between `package.json` and `package-lock.json`?
Ans:  
                     Package.json                                        | Package-lock.json
It contains basic information about the project.             It describes the exact tree that was generated to allow subsequent installs to have the identical tree.
It is mandatory for every project.
It records important metadata about the project.             It is automatically generated for those operations where npm modifies either node_modules tree or package.json.
                                                            It allows future devs to install the same dependencies in the project.
It contains information such as name, description,
 author, script, and dependencies.
 _____________________________________________________________________________________________________________________________________________
 Why should I not modify `package-lock.json`?
● - What is `node_modules` ? Is it a good idea to push that on git?
● - What is the `dist` folder?
● - What is `browserlists`
Read about dif bundlers: vite, webpack, parcel
● Read about: ^ - caret and ~ - tilda
● Read about Script types in html (MDN Docs)
# Project Assignment:
- In your existing project
● - intialize `npm` into your repo
● - install `react` and `react-dom`
● - remove CDN links of react
● - install parcel
● - ignite your app with parcel
● - add scripts for “start” and “build” with parcel commands
● - add `.gitignore` file
● - add `browserlists`
● - build a production version of your code using `parcel build`
# References
● Creating your own create-react-app
● Parcel Documentation
● Parcel on Production
● BrowsersList: https://browserslist.d
    
        